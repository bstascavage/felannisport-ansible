---
- name: Check if cluster already exists
  shell: kubectl cluster-info
  register: cluster_check
  changed_when: False
  ignore_errors: yes
  delegate_to: localhost

- name: Run k3sup install for the first master node
  shell: k3sup install \
    --cluster \
    --ip "{{ hostvars[item].ansible_host }}" \
    --user k3s-temp-user \
    --k3s-extra-args '--docker' \
    --local-path "{{ kubeconfig_location }}" \
    --context "{{ kubectl_context }}" \
    --cluster \
    --ssh-key "temp-user"
  loop: "{{ groups['masters'] }}"
  when: cluster_check.rc != 0 and item == groups['masters'][0]

- name: Wait buffer for master node to be ready
  pause:
    seconds: 30
  when: cluster_check.rc != 0

## Need to look up the k3s ip address because k3sup is still behind the times
- name: Run k3sup join for remaining master nodes
  shell: k3sup join \
    --ip {{ hostvars[item].ansible_host }} \
    --user k3s-temp-user \
    --k3s-extra-args '--docker' \
    --ssh-key "temp-user" \
    --server-ip {{ hostvars[groups['masters'][0]].ansible_host }} \
    --server
  #with_items: "{{ hostvars['localhost']['new_nodes'] }}"
  loop: "{{ groups['masters'] }}"
  when: hostvars['localhost']['deploy_new_node'] is defined and item != groups['masters'][0]
  throttle: 1
  ignore_errors: yes

- name: Wait buffer for nodes to finish configuration
  pause:
    seconds: 30
  when: hostvars['localhost']['deploy_new_node'] is defined

# - name: Add labels to worker nodes
#   command: "kubectl label node {{ item }} node-role.kubernetes.io/worker=worker"
#   with_items: "{{ hostvars['localhost']['new_nodes'] }}"
#   when: hostvars['localhost']['deploy_new_node'] is defined 

- name: Delete temporary SSH keypair - private key
  local_action:
    module: file
    path: "temp-user"
    state: absent

- name: Delete temporary SSH keypair - public key
  local_action:
    module: file
    path: "temp-user.pub"
    state: absent